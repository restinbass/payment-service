version: "3"

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞
vars:
    GO_VERSION: "1.24"
    GOLANGCI_LINT_VERSION: "v2.1.5"
    GCI_VERSION: "v0.13.6"
    GOFUMPT_VERSION: "v0.8.0"
    BUF_VERSION: "1.53.0"
    PROTOC_GEN_GO_VERSION: "v1.36.6"
    PROTOC_GEN_GO_GRPC_VERSION: "v1.5.1"
    PROTOC_GEN_GRPC_GATEWAY_VERSION: "v2.26.3"
    PROTOC_GEN_VALIDATE_VERSION: "v1.2.1"
    PROTOC_GEN_OPENAPIV2_VERSION: "v2.26.3"
    GRPCURL_VERSION: "v1.9.3"
    MOCKERY_VERSION: "v2.53.3"

    BIN_DIR: "{{.ROOT_DIR}}/bin"
    GOLANGCI_LINT: "{{.BIN_DIR}}/golangci-lint"
    GCI: "{{.BIN_DIR}}/gci"
    GOFUMPT: "{{.BIN_DIR}}/gofumpt"
    BUF: "{{.BIN_DIR}}/buf"
    PROTOC_GEN_GO: "{{.BIN_DIR}}/protoc-gen-go"
    PROTOC_GEN_GO_GRPC: "{{.BIN_DIR}}/protoc-gen-go-grpc"
    PROTOC_GEN_GRPC_GATEWAY: "{{.BIN_DIR}}/protoc-gen-grpc-gateway"
    PROTOC_GEN_VALIDATE: "{{.BIN_DIR}}/protoc-gen-validate"
    PROTOC_GEN_OPENAPIV2: "{{.BIN_DIR}}/protoc-gen-openapiv2"
    GRPCURL: "{{.BIN_DIR}}/grpcurl"
    MOCKERY: "{{.BIN_DIR}}/mockery"

    COVERAGE_DIR: "{{.ROOT_DIR}}/coverage"

tasks:
    install-formatters:
        desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã gci –∏ gofumpt –≤ ./bin"
        cmds:
            - |
                [ -f {{.GOFUMPT}} ] || {
                  echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º gofumpt {{.GOFUMPT_VERSION}}...'
                  GOBIN={{.BIN_DIR}} go install mvdan.cc/gofumpt@{{.GOFUMPT_VERSION}}
                }
                [ -f {{.GCI}} ] || {
                  echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º gci {{.GCI_VERSION}}...'
                  GOBIN={{.BIN_DIR}} go install github.com/daixiang0/gci@{{.GCI_VERSION}}
                }
        status:
            - test -x {{.GOFUMPT}}
            - test -x {{.GCI}}

    format:
        desc: "–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç gofumpt + gci"
        deps: [install-formatters]
        cmds:
            - |
                echo "üßº –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ gofumpt ..."
                find . -type f -name '*.go' ! -path '*/mocks/*' -exec {{.GOFUMPT}} -extra -w {} +
            - |
                echo "üéØ –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã —á–µ—Ä–µ–∑ gci ..."
                find . -type f -name '*.go' ! -path '*/mocks/*' -exec {{.GCI}} write -s standard -s default -s "prefix(github.com/olezhek28/microservices-course-examples/)" {} +

    install-golangci-lint:
        desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç golangci-lint –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
        cmds:
            - |
                [ -f {{.GOLANGCI_LINT}} ] || {
                  mkdir -p {{.BIN_DIR}}
                  echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º golangci-lint {{.GOLANGCI_LINT_VERSION}}..."
                  GOBIN={{.BIN_DIR}} go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@{{.GOLANGCI_LINT_VERSION}}
                }
        status:
            - test -x {{.GOLANGCI_LINT}}

    lint:
        desc: "–ó–∞–ø—É—Å–∫–∞–µ—Ç golangci-lint –¥–ª—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π"
        deps: [install-golangci-lint]
        cmds:
            - "{{.GOLANGCI_LINT}} run ./... --config=.golangci.yml"

    install-buf:
        desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Buf –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
        cmds:
            - |
                mkdir -p {{.BIN_DIR}}
                [ -f {{.BUF}} ] || {
                  echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º buf {{.BUF_VERSION}}...'
                  GOBIN={{.BIN_DIR}} go install github.com/bufbuild/buf/cmd/buf@v{{.BUF_VERSION}}
                }
        status:
            - test -x {{.BUF}}

    proto:install-plugins:
        desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç protoc –ø–ª–∞–≥–∏–Ω—ã –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
        cmds:
            - |
                [ -f {{.PROTOC_GEN_GO}} ] || {
                  echo 'üì¶ Installing protoc-gen-go...'
                  GOBIN={{.BIN_DIR}} go install google.golang.org/protobuf/cmd/protoc-gen-go@{{.PROTOC_GEN_GO_VERSION}}
                }
                [ -f {{.PROTOC_GEN_GO_GRPC}} ] || {
                  echo 'üì¶ Installing protoc-gen-go-grpc...'
                  GOBIN={{.BIN_DIR}} go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@{{.PROTOC_GEN_GO_GRPC_VERSION}}
                }
                [ -f {{.PROTOC_GEN_GRPC_GATEWAY}} ] || {
                  echo 'üì¶ Installing protoc-gen-grpc-gateway...'
                  GOBIN={{.BIN_DIR}} go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway@{{.PROTOC_GEN_GRPC_GATEWAY_VERSION}}
                }
                [ -f {{.PROTOC_GEN_VALIDATE}} ] || {
                  echo 'üì¶ Installing protoc-gen-validate...'
                  GOBIN={{.BIN_DIR}} go install github.com/envoyproxy/protoc-gen-validate@{{.PROTOC_GEN_VALIDATE_VERSION}}
                }
                [ -f {{.PROTOC_GEN_OPENAPIV2}} ] || {
                  echo 'üì¶ Installing protoc-gen-openapiv2...'
                  GOBIN={{.BIN_DIR}} go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2@{{.PROTOC_GEN_OPENAPIV2_VERSION}}
                }

    proto:update-deps:
        deps: [install-buf]
        desc: –û–±–Ω–æ–≤–ª—è–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ protobuf –∏–∑ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ (googleapis –∏ —Ç.–¥.)
        dir: proto
        cmds:
            - |
                echo "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ buf..."
                {{.BUF}} dep update

    proto:lint:
        deps: [install-buf, proto:install-plugins, proto:update-deps]
        desc: –ü—Ä–æ–≤–µ—Ä–∫–∞ .proto-—Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∏–ª—é
        dir: proto
        cmds:
            - |
                echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º .proto —Ñ–∞–π–ª—ã..."
                {{.BUF}} lint

    proto:gen:
        deps:
            [install-buf, proto:install-plugins, proto:update-deps, proto:lint]
        desc: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Go-–∫–æ–¥–∞ –∏–∑ .proto
        dir: proto
        cmds:
            - |
                echo "üèóÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Go –∫–æ–¥ –∏–∑ .proto..."
                {{.BUF}} generate

    grpcurl:install:
        desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç grpcurl –≤ –∫–∞—Ç–∞–ª–æ–≥ bin"
        cmds:
            - |
                [ -f {{.GRPCURL}} ] || {
                echo 'üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º grpcurl {{.GRPCURL_VERSION}}...'
                GOBIN={{.BIN_DIR}} go install github.com/fullstorydev/grpcurl/cmd/grpcurl@{{.GRPCURL_VERSION}}
                }
        status:
            - test -x {{.GRPCURL}}

    mockery:install:
        desc: "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç mockery –≤ ./bin"
        cmds:
            - |
                [ -f {{.MOCKERY}} ] || {
                echo 'üì¶ Installing mockery...'
                GOBIN={{.BIN_DIR}} go install github.com/vektra/mockery/v2@{{.MOCKERY_VERSION}}
                }
        status:
            - test -x {{.MOCKERY}}

    mockery:gen:
        desc: "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –º–æ–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ —Å –ø–æ–º–æ—â—å—é mockery"
        deps: [mockery:install]
        cmds:
            - |
                echo 'üß™ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–æ–∫–æ–≤...'
                {{.MOCKERY}}

    test-coverage:
        desc: "–¢–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –∏ –∞–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π"
        cmds:
            - |
                echo "üß™ –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–∞—Å—á—ë—Ç –ø–æ–∫—Ä—ã—Ç–∏—è..."
                rm -rf {{.COVERAGE_DIR}}
                mkdir -p {{.COVERAGE_DIR}}

                # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –ø–∞–∫–µ—Ç—ã, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ –∏–∑–º–µ—Ä–∏—Ç—å –ø–æ–∫—Ä—ã—Ç–∏–µ (–∏—Å–∫–ª—é—á–∞–µ–º mocks)
                TARGET_PACKAGES=$(go list ./internal/... | grep -v "/mocks" | grep -E '/(api|service)/' | tr '\n' ',')

                if [ -z "$TARGET_PACKAGES" ]; then
                echo "‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
                exit 1
                fi

                echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–æ —Å–±–æ—Ä–æ–º –ø–æ–∫—Ä—ã—Ç–∏—è –¥–ª—è –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π..."
                go test -v -coverprofile={{.COVERAGE_DIR}}/coverage.out -coverpkg=$TARGET_PACKAGES ./...

                echo "üßæ –û–±—â–µ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ:"
                go tool cover -func={{.COVERAGE_DIR}}/coverage.out | tail -n1

    coverage:html:
        desc: "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML-–æ—Ç—á—ë—Ç –ø–æ–∫—Ä—ã—Ç–∏—è –∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –µ–≥–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
        deps: [test-coverage]
        cmds:
            - |
                OUTPUT={{.COVERAGE_DIR}}/coverage.html
                echo "üåê –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML-–æ—Ç—á—ë—Ç..."
                go tool cover -html={{.COVERAGE_DIR}}/coverage.out -o $OUTPUT

                echo "üöÄ –û—Ç–∫—Ä—ã–≤–∞–µ–º $OUTPUT"
                if command -v open &> /dev/null; then
                open $OUTPUT  # macOS
                elif command -v xdg-open &> /dev/null; then
                xdg-open $OUTPUT  # Linux
                else
                echo "üìÇ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ $OUTPUT (–æ—Ç–∫—Ä–æ–π –≤—Ä—É—á–Ω—É—é)"
                fi
